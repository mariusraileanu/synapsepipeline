{
	"name": "Metadata Driven Raw to Bronze Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Get Pipelines",
				"description": "Returns all pipelines from the metadata to be executed within a given processing stage.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[get_job_metadata]",
						"storedProcedureParameters": {
							"jobName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.jobName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Execute Pipelines",
				"description": "Second level ForEach to run in parallel all pipelines within the stage. Items for iteration passed from the Get Pipelines lookup activity.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Pipelines",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@json(activity('Get Pipelines').output.value[0].metadata).loadPipeline",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "Load Data from Raw to Bronze",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/ETL Framework/operators/raw_to_bronze",
								"baseParameters": {
									"rawFilePath": {
										"value": "@replace(replace(replace(replace(replace(json(activity('Get Pipelines').output.value[0].metadata).rawConnection.config.filePath, '{dataset}', item().config.dataset), '{source}', toLower(json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.connectionType)), 'YYYY', substring(pipeline().parameters.windowStartTime, 0, 4)), 'MM', substring(pipeline().parameters.windowStartTime, 4, 2)), 'DD', substring(pipeline().parameters.windowStartTime, 6, 2))",
										"type": "Expression"
									},
									"bronzeFilePath": {
										"value": "@replace(replace(replace(replace(replace(json(activity('Get Pipelines').output.value[0].metadata).bronzeConnection.config.filePath, '{dataset}', item().config.dataset), '{source}', toLower(json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.connectionType)), 'YYYY', substring(pipeline().parameters.windowStartTime, 0, 4)), 'MM', substring(pipeline().parameters.windowStartTime, 4, 2)), 'DD', substring(pipeline().parameters.windowStartTime, 6, 2))",
										"type": "Expression"
									},
									"fileName": {
										"value": "@item().config.fileName",
										"type": "Expression"
									},
									"fileType": "parquet",
									"tableName": {
										"value": "@item().config.tableName",
										"type": "Expression"
									},
									"rawContainer": {
										"value": "@json(activity('Get Pipelines').output.value[0].metadata).rawConnection.config.container",
										"type": "Expression"
									},
									"bronzeContainer": {
										"value": "@json(activity('Get Pipelines').output.value[0].metadata).bronzeConnection.config.container",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks",
								"type": "LinkedServiceReference",
								"parameters": {
									"clusterNodeType": "Standard_E8d_v4",
									"workers": "1"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"jobName": {
				"type": "string",
				"defaultValue": "Load MySQL"
			},
			"windowStartTime": {
				"type": "string",
				"defaultValue": "20220706"
			}
		},
		"annotations": [
			"procfwk",
			"Child"
		],
		"lastPublishTime": "2022-04-08T11:53:19Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}