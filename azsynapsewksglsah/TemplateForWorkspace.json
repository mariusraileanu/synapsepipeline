{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "azsynapsewksglsah"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"AzureMySql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"azsynapsewksglsah-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azsynapsewksglsah-WorkspaceDefaultSqlServer'"
		},
		"linkedServiceMetadata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedServiceMetadata'"
		},
		"azsqlserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azsqlserver'"
		},
		"FrameworkFunctions_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://frameworkfunctions00001.azurewebsites.net"
		},
		"azanomalydetectorglsah_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "fdc33604-09e4-45f1-a48e-46a602d755d4"
		},
		"azcurateddatalakeglsah_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azcurateddatalakeglsah.dfs.core.windows.net"
		},
		"azkeyvaultglsah_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://azkeyvaultglsah.vault.azure.net/"
		},
		"azmlwksglsah_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "fdc33604-09e4-45f1-a48e-46a602d755d4"
		},
		"azmlwksglsah_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "rg-end-to-end-analytics-prod-00001"
		},
		"azrawdatalakeglsah_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().url}"
		},
		"azsynapsewksglsah-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azwksdatalakeglsah.dfs.core.windows.net"
		},
		"aztextanalyticsglsah_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "fdc33604-09e4-45f1-a48e-46a602d755d4"
		},
		"azwksdatalakeglsah_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azwksdatalakeglsah.dfs.core.windows.net"
		},
		"schedule_properties_pipeline_parameters_windowStartTime": {
			"type": "string",
			"defaultValue": "@{formatDateTime(trigger().outputs.windowStartTime,'yyyyMMdd')}"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Copy Data from MySQL to ADLS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data from MySQL to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "mysql_table",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.tableName",
										"type": "Expression"
									},
									"hostName": {
										"value": "@pipeline().parameters.hostName",
										"type": "Expression"
									},
									"port": {
										"value": "@pipeline().parameters.port",
										"type": "Expression"
									},
									"databaseName": {
										"value": "@pipeline().parameters.databaseName",
										"type": "Expression"
									},
									"userName": {
										"value": "@pipeline().parameters.userName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adls_parquet",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.container",
										"type": "Expression"
									},
									"filePath": {
										"value": "@pipeline().parameters.filePath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"url": {
										"value": "@pipeline().parameters.url",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"container": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"hostName": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"databaseName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "operator"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-24T13:04:55Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/mysql_table')]",
				"[concat(variables('workspaceId'), '/datasets/adls_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Load MySQL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Metadata Driven Master Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Metadata Driven Master Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"jobName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"windowStartTime": {
									"value": "@pipeline().parameters.windowStartTime",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStartTime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "jobs"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-07T09:38:40Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Metadata Driven Master Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Metadata Driven Master Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "procfwk child pipeline used to execute Worker pipelines within a given execution stage. This pipeline will be called once for each stage, then execute all Workers in parallel.",
				"activities": [
					{
						"name": "Metadata Driven Source to Raw Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Metadata Driven Source to Raw Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"jobName": {
									"value": "@pipeline().parameters.jobName",
									"type": "Expression"
								},
								"windowStartTime": {
									"value": "@pipeline().parameters.windowStartTime",
									"type": "Expression"
								},
								"serverName": {
									"value": "@pipeline().parameters.serverName",
									"type": "Expression"
								},
								"databaseName": {
									"value": "@pipeline().parameters.databaseName",
									"type": "Expression"
								},
								"userName": {
									"value": "@pipeline().parameters.userName",
									"type": "Expression"
								},
								"secretNamePassword": {
									"value": "@pipeline().parameters.secretNamePassword",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Metadata Driven Raw to Bronze Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Metadata Driven Source to Raw Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Metadata Driven Raw to Bronze Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"jobName": {
									"value": "@pipeline().parameters.jobName",
									"type": "Expression"
								},
								"windowStartTime": {
									"value": "@pipeline().parameters.windowStartTime",
									"type": "Expression"
								},
								"serverName": {
									"value": "@pipeline().parameters.serverName",
									"type": "Expression"
								},
								"databaseName": {
									"value": "@pipeline().parameters.databaseName",
									"type": "Expression"
								},
								"userName": {
									"value": "@pipeline().parameters.userName",
									"type": "Expression"
								},
								"secretNamePassword": {
									"value": "@pipeline().parameters.secretNamePassword",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"jobName": {
						"type": "string",
						"defaultValue": "Load MySQL"
					},
					"windowStartTime": {
						"type": "string",
						"defaultValue": "20220706"
					},
					"serverName": {
						"type": "string",
						"defaultValue": "frameworkinstance00001.database.windows.net"
					},
					"databaseName": {
						"type": "string",
						"defaultValue": "frameworkmetadata"
					},
					"userName": {
						"type": "string",
						"defaultValue": "sqldbsa"
					},
					"secretNamePassword": {
						"type": "string",
						"defaultValue": "azsqldbframeworkpassword"
					}
				},
				"annotations": [
					"procfwk",
					"Child"
				],
				"lastPublishTime": "2022-04-07T11:01:08Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Metadata Driven Source to Raw Pipeline')]",
				"[concat(variables('workspaceId'), '/pipelines/Metadata Driven Raw to Bronze Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Metadata Driven Raw to Bronze Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Pipelines",
						"description": "Returns all pipelines from the metadata to be executed within a given processing stage.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[dbo].[get_job_metadata]",
								"storedProcedureParameters": {
									"jobName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.jobName",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azsql_table",
								"type": "DatasetReference",
								"parameters": {
									"serverName": {
										"value": "@pipeline().parameters.serverName",
										"type": "Expression"
									},
									"databaseName": {
										"value": "@pipeline().parameters.databaseName",
										"type": "Expression"
									},
									"userName": {
										"value": "@pipeline().parameters.userName",
										"type": "Expression"
									},
									"secretNamePassword": {
										"value": "@pipeline().parameters.secretNamePassword",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipelines",
						"description": "Second level ForEach to run in parallel all pipelines within the stage. Items for iteration passed from the Get Pipelines lookup activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pipelines",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('Get Pipelines').output.value[0].metadata).loadPipeline",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Load Data from Raw to Bronze",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/ETL Framework/operators/raw_to_bronze",
										"baseParameters": {
											"rawFilePath": {
												"value": "@replace(replace(replace(replace(replace(json(activity('Get Pipelines').output.value[0].metadata).rawConnection.config.filePath, '{dataset}', item().config.dataset), '{source}', toLower(json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.connectionType)), 'YYYY', substring(pipeline().parameters.windowStartTime, 0, 4)), 'MM', substring(pipeline().parameters.windowStartTime, 4, 2)), 'DD', substring(pipeline().parameters.windowStartTime, 6, 2))",
												"type": "Expression"
											},
											"bronzeFilePath": {
												"value": "@replace(replace(replace(replace(replace(json(activity('Get Pipelines').output.value[0].metadata).bronzeConnection.config.filePath, '{dataset}', item().config.dataset), '{source}', toLower(json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.connectionType)), 'YYYY', substring(pipeline().parameters.windowStartTime, 0, 4)), 'MM', substring(pipeline().parameters.windowStartTime, 4, 2)), 'DD', substring(pipeline().parameters.windowStartTime, 6, 2))",
												"type": "Expression"
											},
											"fileName": {
												"value": "@item().config.fileName",
												"type": "Expression"
											},
											"fileType": "parquet",
											"tableName": {
												"value": "@item().config.tableName",
												"type": "Expression"
											},
											"rawContainer": {
												"value": "@json(activity('Get Pipelines').output.value[0].metadata).rawConnection.config.container",
												"type": "Expression"
											},
											"bronzeContainer": {
												"value": "@json(activity('Get Pipelines').output.value[0].metadata).bronzeConnection.config.container",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference",
										"parameters": {
											"clusterNodeType": "Standard_E8d_v4",
											"workers": "1"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"jobName": {
						"type": "string",
						"defaultValue": "Load MySQL"
					},
					"windowStartTime": {
						"type": "string",
						"defaultValue": "20220706"
					},
					"serverName": {
						"type": "string"
					},
					"databaseName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"secretNamePassword": {
						"type": "string"
					}
				},
				"annotations": [
					"procfwk",
					"Child"
				],
				"lastPublishTime": "2022-04-08T11:53:19Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/azsql_table')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Metadata Driven Source to Raw Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Pipelines",
						"description": "Returns all pipelines from the metadata to be executed within a given processing stage.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[dbo].[get_job_metadata]",
								"storedProcedureParameters": {
									"jobName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.jobName",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "azsql_table",
								"type": "DatasetReference",
								"parameters": {
									"serverName": {
										"value": "@pipeline().parameters.serverName",
										"type": "Expression"
									},
									"databaseName": {
										"value": "@pipeline().parameters.databaseName",
										"type": "Expression"
									},
									"userName": {
										"value": "@pipeline().parameters.userName",
										"type": "Expression"
									},
									"secretNamePassword": {
										"value": "@pipeline().parameters.secretNamePassword",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipelines",
						"description": "Second level ForEach to run in parallel all pipelines within the stage. Items for iteration passed from the Get Pipelines lookup activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Pipelines",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('Get Pipelines').output.value[0].metadata).extractPipeline",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Check source type",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.config.connectionType",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "mysql",
												"activities": [
													{
														"name": "Copy Data from MySQL to ADLS",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "Copy Data from MySQL to ADLS",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"tableName": {
																	"value": "@item().config.tableName",
																	"type": "Expression"
																},
																"container": {
																	"value": "@json(activity('Get Pipelines').output.value[0].metadata).rawConnection.config.container",
																	"type": "Expression"
																},
																"filePath": {
																	"value": "@replace(replace(replace(replace(replace(json(activity('Get Pipelines').output.value[0].metadata).rawConnection.config.filePath, '{dataset}', item().config.dataset), '{source}', toLower(json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.connectionType)), 'YYYY', substring(pipeline().parameters.windowStartTime, 0, 4)), 'MM', substring(pipeline().parameters.windowStartTime, 4, 2)), 'DD', substring(pipeline().parameters.windowStartTime, 6, 2))",
																	"type": "Expression"
																},
																"fileName": {
																	"value": "@item().config.fileName",
																	"type": "Expression"
																},
																"hostName": {
																	"value": "@json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.config.hostName",
																	"type": "Expression"
																},
																"port": {
																	"value": "@json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.config.port",
																	"type": "Expression"
																},
																"databaseName": {
																	"value": "@json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.config.databaseName",
																	"type": "Expression"
																},
																"userName": {
																	"value": "@json(activity('Get Pipelines').output.value[0].metadata).sourceConnection.config.userName",
																	"type": "Expression"
																},
																"url": {
																	"value": "@json(activity('Get Pipelines').output.value[0].metadata).rawConnection.config.url",
																	"type": "Expression"
																}
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"jobName": {
						"type": "string",
						"defaultValue": "Load MySQL"
					},
					"windowStartTime": {
						"type": "string",
						"defaultValue": "20220706"
					},
					"serverName": {
						"type": "string"
					},
					"databaseName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"secretNamePassword": {
						"type": "string"
					}
				},
				"annotations": [
					"procfwk",
					"Child"
				],
				"lastPublishTime": "2022-04-08T11:53:17Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/azsql_table')]",
				"[concat(variables('workspaceId'), '/pipelines/Copy Data from MySQL to ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Send Email')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Provide a simple abstract over the send email function with request body item exposed as pipeline parameters.",
				"activities": [
					{
						"name": "Send Email",
						"description": "Use an Azure Function to perform an SMTP client email send operation.",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "SendEmail",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"emailRecipients\": \"@{pipeline().parameters.recipients}\",\n\"emailCcRecipients\": \"@{pipeline().parameters.cc_recipients}\",\n\"emailBccRecipients\": \"@{pipeline().parameters.bcc_recipients}\",\n\"emailSubject\": \"@{pipeline().parameters.subject}\",\n\"emailBody\": \"@{pipeline().parameters.body}\",\n\"emailImportance\": \"@{pipeline().parameters.importance}\"\n}",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "FrameworkFunctions",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"recipients": {
						"type": "string"
					},
					"cc_recipients": {
						"type": "string"
					},
					"bcc_recipients": {
						"type": "string"
					},
					"subject": {
						"type": "string"
					},
					"body": {
						"type": "string"
					},
					"importance": {
						"type": "string"
					}
				},
				"folder": {
					"name": "utils"
				},
				"annotations": [
					"procfwk",
					"Utils"
				],
				"lastPublishTime": "2022-03-24T05:36:57Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/FrameworkFunctions')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Send Teams Channel Notification')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Use this pipeline template to send notification on a teams channel. \n\nhttps://adf.azure.com/en-us/monitoring/pipelineruns/f90465ff-b8ea-4f0f-9110-178164bc8ee4?factory=/subscriptions/7b68d2b5-dfbe-46e1-938f-98ed143b7953/resourceGroups/demo101-rg/providers/Microsoft.DataFactory/factories/demofactory101",
				"activities": [
					{
						"name": "Set Facts",
						"description": "Details on Fact schema for teams messages: https://adaptivecards.io/explorer/Fact.html",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "messageCardString",
							"value": {
								"value": "{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"0076D7\",\n    \"summary\": \"Pipeline status alert message​​​​\",\n    \"sections\": [\n        {\n            \"activityTitle\": \"Pipeline alert​​​​\",\n            \"facts\": [\n                {\n                    \"name\": \"Pipeline RunId:\",\n                    \"value\": \"@{pipeline().parameters.pipelineRunId}\"\n                },\n                {\n                    \"name\": \"Activity name:\",\n                    \"value\": \"@{pipeline().parameters.activityName}\"\n                },\n                {\n                    \"name\": \"Activity status:\",\n                    \"value\": \"@{pipeline().parameters.activityStatus}\"\n                },\n                {\n                    \"name\": \"Execution duration (s):\",\n                    \"value\": \"@{pipeline().parameters.activityDuration}\"\n                },\n                {\n                    \"name\": \"Message\",\n                    \"value\": \"@{pipeline().parameters.activityMessage}\"\n                },\n                {\n                    \"name\": \"Notification time (UTC):\",\n                    \"value\": \"@{utcnow()}\"\n                },\n                {\n                    \"name\": \"Data Factory name:\",\n                    \"value\": \"@{pipeline().DataFactory}\"\n                }\n            ],\n            \"markdown\": true\n        }\n    ],\n    \"potentialAction\": [\n        {\n            \"@type\": \"OpenUri\",\n            \"name\": \"View pipeline run\",\n            \"targets\": [\n                {\n                    \"os\": \"default\",\n                    \"uri\": \"@{concat('https://adf.azure.com/monitoring/pipelineruns/',pipeline().parameters.pipelineRunId,'?factory=/subscriptions/',pipeline().parameters.dataFactorySubscription,'/resourceGroups/',pipeline().parameters.dataFactoryResourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory)}\"\n                }\n            ]\n        }\n    ]\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Call Teams Webhook",
						"description": "Invokes teams channel's webbook.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Facts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.teamsWebhookUrl",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(variables('messageCardString'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"dataFactorySubscription": {
						"type": "string",
						"defaultValue": "<Update value>"
					},
					"dataFactoryResourceGroup": {
						"type": "string",
						"defaultValue": "<Update value>"
					},
					"pipelineRunId": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"teamsWebhookUrl": {
						"type": "string",
						"defaultValue": "<Update value>"
					},
					"activityName": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"activityMessage": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"activityDuration": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"activityStatus": {
						"type": "string",
						"defaultValue": "Failed"
					}
				},
				"variables": {
					"messageCardString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "utils"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-24T05:37:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Terminate Databricks Cluster')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Terminate Databricks Cluster",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Databricks Token",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Databricks Workspace URL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{activity('Get Databricks Workspace URL').output.value}/api/2.0/clusters/delete",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "Bearer @{activity('Get Databricks Token').output.value}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\"cluster_id\":\"@{pipeline().parameters.cluster_id}\"}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Databricks Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://azkeyvaultglsah.vault.azure.net/secrets/databrickstoken/9c0bf416a6c24d83bf226973dcc656d8?api-version=7.0",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get Databricks Workspace URL",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://azkeyvaultglsah.vault.azure.net/secrets/databricksworkspaceurl/a0ffb9bd838f4b71a821790eaa2bea40?api-version=7.0",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"cluster_id": {
						"type": "string"
					}
				},
				"folder": {
					"name": "utils"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-24T05:38:19Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adls_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azrawdatalakeglsah",
					"type": "LinkedServiceReference",
					"parameters": {
						"url": {
							"value": "@dataset().url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{dataset().fileName}.parquet",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/azrawdatalakeglsah')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mysql_table')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql",
					"type": "LinkedServiceReference",
					"parameters": {
						"host_name": {
							"value": "@dataset().hostName",
							"type": "Expression"
						},
						"port": {
							"value": "@dataset().port",
							"type": "Expression"
						},
						"database_name": {
							"value": "@dataset().databaseName",
							"type": "Expression"
						},
						"user_name": {
							"value": "@dataset().userName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"hostName": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"databaseName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureMySql')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDatabricks')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"clusterNodeType": {
						"type": "string",
						"defaultValue": "Standard_E8d_v4"
					},
					"workers": {
						"type": "string",
						"defaultValue": "2"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7579570048102701.1.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "0309-063540-5mrdokl"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureMySql')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"host_name": {
						"type": "string"
					},
					"port": {
						"type": "string"
					},
					"database_name": {
						"type": "string"
					},
					"user_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FrameworkFunctions')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Interact with the Azure Functions App used as middle ware when making requests to Worker pipelines. Authentication done at the Function App level.",
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('FrameworkFunctions_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "azkeyvaultglsah",
							"type": "LinkedServiceReference"
						},
						"secretName": "FunctionDefaultKey"
					},
					"authentication": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/azkeyvaultglsah')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azanomalydetectorglsah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CognitiveService",
				"typeProperties": {
					"subscriptionId": "[parameters('azanomalydetectorglsah_properties_typeProperties_subscriptionId')]",
					"resourceGroup": "rg-end-to-end-analytics-prod-00001",
					"csName": "azanomalydetectorglsah",
					"csKind": "AnomalyDetector",
					"csLocation": "centralindia",
					"endPoint": "https://azanomalydetectorglsah.cognitiveservices.azure.com/",
					"csKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "azkeyvaultglsah",
							"type": "LinkedServiceReference"
						},
						"secretName": "azanomalydetectorglsah-Key"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/azkeyvaultglsah')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azcurateddatalakeglsah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azcurateddatalakeglsah_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azkeyvaultglsah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('azkeyvaultglsah_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azmlwksglsah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('azmlwksglsah_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('azmlwksglsah_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "azmlwksglsah",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azrawdatalakeglsah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azrawdatalakeglsah_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsynapsewksglsah-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('azsynapsewksglsah-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsynapsewksglsah-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azsynapsewksglsah-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/aztextanalyticsglsah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CognitiveService",
				"typeProperties": {
					"subscriptionId": "[parameters('aztextanalyticsglsah_properties_typeProperties_subscriptionId')]",
					"resourceGroup": "rg-end-to-end-analytics-prod-00001",
					"csName": "aztextanalyticsglsah",
					"csKind": "TextAnalytics",
					"csLocation": "centralindia",
					"endPoint": "https://aztextanalyticsglsah.cognitiveservices.azure.com/",
					"csKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "azkeyvaultglsah",
							"type": "LinkedServiceReference"
						},
						"secretName": "aztextanalyticsglsah-Key"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/azkeyvaultglsah')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azwksdatalakeglsah')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azwksdatalakeglsah_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkedServiceMetadata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('linkedServiceMetadata_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/schedule')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Metadata Driven Master Pipeline",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowStartTime": "[parameters('schedule_properties_pipeline_parameters_windowStartTime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2022-04-01T08:17:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Metadata Driven Master Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synsparkpool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 2,
					"minNodeCount": 2
				},
				"nodeCount": 0,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "2.4",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "centralindia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparkpool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 3,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Large",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.1",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "centralindia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synsqlpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "centralindia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsqlserver')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"databaseName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"secretNamePassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('azsqlserver_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "azkeyvaultglsah",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().secretNamePassword",
							"type": "Expression"
						}
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/azkeyvaultglsah')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsql_table')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azsqlserver",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName": {
							"value": "@dataset().serverName",
							"type": "Expression"
						},
						"databaseName": {
							"value": "@dataset().databaseName",
							"type": "Expression"
						},
						"userName": {
							"value": "@dataset().userName",
							"type": "Expression"
						},
						"secretNamePassword": {
							"value": "@dataset().secretNamePassword",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"databaseName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"secretNamePassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/azsqlserver')]"
			]
		}
	]
}